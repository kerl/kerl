version: 2
workflows:
  version: 2
  test-workflow:
    jobs:
      - debian8_R15B03-1
      - centos6_20.2
      - alpine3.7_20.3
      - jessie_20.3.2_wx

jobs:

  debian8_R15B03-1:
    docker:
      - image: debian:8
    environment:
      - _KERL_VSN: R15B03-1
      - KERL_CONFIGURE_DISABLE_APPLICATIONS: 'odbc'
    steps:
      - run: apt-get update && apt-get upgrade -y
      - run: apt-get install -y git curl build-essential libncurses-dev libssl-dev
      - checkout
      - run: ./kerl update releases
      - run:
          command: ./kerl build "$_KERL_VSN" "$_KERL_VSN"
          no_output_timeout: 45m
      - run: ./kerl install "$_KERL_VSN" "install_$_KERL_VSN"
      - run: ./kerl status
      - run: |
          set -x
          source $(./kerl path install_$_KERL_VSN)/activate
          erl -s crypto -s init stop
          kerl_deactivate
      - run: ./kerl delete installation $(./kerl path install_$_KERL_VSN)
      - run: ./kerl delete build "$_KERL_VSN"

  jessie_20.3.2_wx:
    docker:
      - image: debian:jessie
    environment:
      - _KERL_VSN: 20.3.2
      - KERL_BUILD_BACKEND: git
    steps:
      - run: apt update && apt upgrade -y
      - run: |
          apt install -y --no-install-recommends \
             curl ca-certificates \
             libodbc1 libssl1.0.0 libsctp1 \
             git autoconf dpkg-dev gcc g++ make \
             libncurses-dev unixodbc-dev libssl-dev libsctp-dev \
             libwxgtk3.0-dev libgl1-mesa-dev libglu1-mesa-dev libpng3
      # - run: apt install -y libwxgtk3.0
      - run: wx-config --version
      - checkout
      - run: ./kerl update releases
      - run:
          command: |
            export MAKEFLAGS="-j$(getconf _NPROCESSORS_ONLN)"
            ./kerl build "$_KERL_VSN" "$_KERL_VSN" | tee build.log
          no_output_timeout: 45m
      - run: cat build.log
      - run: "! grep -F 'ODBC library' build.log"
      - run: "! grep -F 'wx will NOT be usable' build.log"
      - run: ./kerl install "$_KERL_VSN" "install_$_KERL_VSN"
      - run: ./kerl status
      - run: |
          set -x
          source $(./kerl path install_$_KERL_VSN)/activate
          for app in crypto odbc wx; do
            echo TEST app $app
            erl -noshell -eval "case application:ensure_all_started($app) of {ok,[_|_]} -> init:stop(); _ -> init:stop(1) end."
            echo PASS app $app
          done
          kerl_deactivate
      - run: ./kerl delete installation $(./kerl path install_$_KERL_VSN)
      - run: ./kerl delete build "$_KERL_VSN"

  centos6_20.2:
    docker:
      - image: centos:6
    environment:
      - _KERL_VSN: 20.2
      - KERL_CONFIGURE_DISABLE_APPLICATIONS: 'odbc'
    steps:
      - run: yum -y update
      - run: yum -y install curl ncurses-devel openssl-devel make automake autoconf gcc gcc-c++ gcc-java
      - run: |
          yum -y install https://centos6.iuscommunity.org/ius-release.rpm
          # CircleCI checkout uses -B which isn't available in CentOS6's packaged git
          yum -y install git2u
      - checkout
      - run: ./kerl update releases
      - run:
          command: ./kerl build "$_KERL_VSN" "$_KERL_VSN"
          no_output_timeout: 45m
      - run: ./kerl install "$_KERL_VSN" "install_$_KERL_VSN"
      - run: ./kerl status
      - run: |
          set -x
          source $(./kerl path install_$_KERL_VSN)/activate
          erl -s crypto -s init stop
          kerl_deactivate
      - run: ./kerl delete installation $(./kerl path install_$_KERL_VSN)
      - run: ./kerl delete build "$_KERL_VSN"

  alpine3.7_20.3:
    docker:
      - image: alpine:3.7
    environment:
      - _KERL_VSN: 20.3
      - KERL_CONFIGURE_DISABLE_APPLICATIONS: odbc
      - KERL_BUILD_BACKEND: git
      - KERL_BUILD_DOCS: 'yes'
    steps:
      - run: apk update && apk upgrade
      - run: |
          apk add curl ca-certificates \
                  dpkg-dev dpkg \
                  gcc g++ libc-dev linux-headers make autoconf ncurses-dev tar \
                  openssl-dev unixodbc-dev lksctp-tools-dev \
                  lksctp-tools \
                  libxslt git
      - checkout
      - run: ./kerl update releases
      - run:
          command: |
            export MAKEFLAGS="-j$(getconf _NPROCESSORS_ONLN)"
            ./kerl build "$_KERL_VSN" "$_KERL_VSN"
          no_output_timeout: 45m
      - run: ./kerl install "$_KERL_VSN" "install_$_KERL_VSN"
      - run: ./kerl status
      - run: |
          set -x
          source $(./kerl path install_$_KERL_VSN)/activate
          erl -s crypto -s init stop
          kerl_deactivate
      - run: ./kerl delete installation $(./kerl path install_$_KERL_VSN)
      - run: ./kerl delete build "$_KERL_VSN"
